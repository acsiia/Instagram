converter.convert=Converting {0} to {1};({2} to {3});

dao.comment.save=Save {0} to Data Base;
dao.comment.delete=Delete {0} from Data Base;
dao.comment.update=Update {0} from Data Base;
dao.comment.getById=Get comment by  id={0} from Data Base;
dao.comment.getList=Get list of comments from Data Base; result={0};
dao.comment.getListOfPostsByPostId=Get list of comments from Data Base by post id={0}; result={1};
dao.post.save=Save {0} to Data Base;
dao.post.delete=Delete post by id={0} from Data Base;
dao.post.update=Update {0} from Data Base;
dao.post.getById=Get post by  id={0} from Data Base;
dao.post.getList=Get list of posts from Data Base; result={0};
dao.post.getListByOwnerId=Get list of posts from Data Base by owner id={0}; result={1};
dao.user.save=Save {0} to Data Base;
dao.user.delete=Delete {0} from Data Base;
dao.user.update=Update {0} from Data Base;
dao.user.getById=Get user by  id={0} from Data Base; result={1};
dao.user.getList=Get list of users from Data Base; result={0};
dao.user.getUserByName=Get user by name={0} from Data Base; result={1};
dao.user.deleteUserById=Delete user by id={0} from Data Base;
dao.user.findByPattern=Find users by pattern={0} from Data Base;
dao.profile.save=Save {0} to Data Base;
dao.profile.delete=Delete profile by id={0} from Data Base;
dao.profile.update=Update {0} from Data Base;
dao.profile.getById=Get profile by  id={0} from Data Base;
dao.profile.getList=Get list of profiles from Data Base; result={0};
dao.profile.getByUserId=Get profile by user id={0} from Data Base;
dao.rating.save=Save {0} to Data Base;
dao.rating.delete=Delete rating by id={0} from Data Base;
dao.rating.update=Update {0} from Data Base;
dao.rating.getById=Get rating by  id={0} from Data Base;
dao.rating.getList=Get list of ratings from Data Base; result={0};
dao.rating.getRatingBySenderAndPostId=Get rating by user id={0} and post id={1} from Data Base;
dao.country.getById=Get country by  id={0} from Data Base;
dao.country.getList=Get list of countries from Data Base; result={0};
dao.user.getUserByEmail=Get user by email={0} from Data Base; result={1};


service.user.save=Save user={0};
service.user.delete=Delete user by id={0};
service.user.update=Update user={0};
service.user.getUserByLogin=Get user by login={0}; result={1};
service.user.getUserByEmail=Get user by email={0}; result={1};
service.user.getUserById=Get user by id={0}; result={1};
service.user.getList=Get user list; result={0};
service.user.setPostSendersUsernames=Set usernames of post's senders;
service.user.setCommentSendersNames=Get usernames of comment's senders;
service.post.save=Save post={0};
service.post.delete=Delete post by id={0};
service.post.update=Update post={0};
service.post.getPostById=Get post by id={0}; result={1};
service.post.getList=Get post list; result={0};
service.post.getListByIdOfOwner=Get posts by owner id={0}; result={1};
service.post.getReversedListByIdOfOwner=Get reversed post list by owner id={0}; result={1};
service.comment.save=Save comment={0};
service.comment.delete=Delete comment by id={0};
service.comment.update=Update comment={0};
service.comment.getById=Get comment by id={0}; result={1};
service.comment.getList=Get comment list; result={0};
service.comment.getListOfPostsByPostId=Get comment list by post id={0}; result={1};
service.authorizationService.login=Success authentication user(username={0})
service.authorizationService.loadUserByUsername=found user by username={0}
service.profile.save=Save profile={0};
service.profile.delete=Delete profile by id={0};
service.profile.update=Update profile={0};
service.profile.getPostById=Get profile by id={0}; result={1};
service.profile.getList=Get profile list; result={0};
service.profile.getProfileDTOByUserId=Get profile by user id={0}; result={1};
service.profile.setPostSendersProfiles=Get profiles of post's senders;
service.rating.save=Save rating={0};
service.rating.delete=Delete rating by id={0};
service.rating.getRatingById=Get rating by id={0}; result={1};
service.rating.getList=Get rating list; result={0};
service.country.getCountryById=Get country by id={0}; result={1};
service.country.getCountriesOfLocaleRu=Get countries, russian locale;
service.country.getCountriesOfLocaleEn=Get countries, english locale;


test.profile.get=Getting result={0};
test.profile.update=Update profile={0} with id={1};
test.profile.delete=Delete profile;
test.profile.save=Saving profile={0} with id={1};
test.profile.init=init profile test;
test.user.init=init user test(user={0});
test.user.save=Saving user={0};
test.user.get=Getting by name result={0}; Getting by id result={1};
test.user.update=Update user={0} with id={1};
test.user.delete=Delete user with id={0};
test.post.init=init post test(post={0});
test.post.save=Saving post={0}; Test getting by id, object={1}
test.post.get=Getting post by id result={0};
test.post.update=Update post={0} with id={1};
test.post.delete=Delete post with id={0}; getting result={1}
test.rating.init=init rating test(rating={0});
test.rating.save.success=Saving rating={0} success; Test getting by id={1}, object={2}
test.rating.get.success=Getting by id={0} success; result={1};
test.rating.update.success=Update rating success;
test.rating.delete.success=Deleting rating success;
test.comment.save=Saving comment={0}; Test getting by id, object={1}
test.comment.get=Getting comment by id result={0};
test.comment.update=Update comment={0} with id={1};
test.comment.delete=Delete comment with id={0}; getting result={1}
test.comment.init=init comment test(post={0});
test.comment.saveFail=Saving post=null is IllegalArgumentException;
test.post.saveFail=Saving post=null is IllegalArgumentException;
test.profile.saveFail=Saving profile=null is IllegalArgumentException;
test.user.saveFail=Saving user=null is IllegalArgumentException;
test.user.saveDublicationFail=Saving dubbed information;
test.rating.saveFail=Saving rating=null is IllegalArgumentException;

profile.validator.fullname.illegalsymbols=Invalid value of {0}={1}; legal characters regex={2};
profile.validator.city.illegalsymbols=Invalid value of {0}={1}; legal characters regex={2};
messageContent.validator.encodeMessage=encode html tags;
messageContent.validator.href=Found href in message content;
messageContent.validator.nothref=Not found href in message content;
post.validator.isEmpty=post is Empty; cannot submit;
post.validator.isNotEmpty=post is not Empty; can submit;
signup.validator.invalidchars=Invalid value chars; legal characters regex={0};
signup.validator.isEmpty=Empty value of userDTO fields;
signup.validator.loginExists=Login already exists;
signup.validator.emailExists=Email already exists;
signup.validator.emailNotExists=Email free;
signup.validator.loginNotExists=Login free;


















